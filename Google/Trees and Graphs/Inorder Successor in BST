/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* inorderSuccessor(TreeNode* root, TreeNode* p) {
        vector<TreeNode*> inorder;
        dfs(root,&inorder,p);
       for(int i=0;i<inorder.size();i++){
           if(inorder[i]->val>p->val)
               return inorder[i];
       }
        return NULL;
    }
    void dfs(TreeNode *root,vector<TreeNode*> *inorder,TreeNode* p){
        if (root==NULL) return;
        if(root->left !=NULL)
            dfs(root->left,inorder,p);
        (*inorder).push_back(root);
        if(root->val>p->val) return;
        if(root->right !=NULL)
            dfs(root->right,inorder,p);
    }
};
